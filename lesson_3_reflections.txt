When would you want to use a remote repository rather than keeping all your work local?

A remote repository would be used when you are collborating with others on a project. Everyone 
involved would be able to push their own work and pull each other's off of an online repository.
When working on your own, a remote repository could come in handy if you have very low storage on
your device and want to store your changes on an online repository rather than on your machine.

Why might you want to always pull changes manually rather than having Git automatically stay 
up-to-date with your remote repository?

You would only want to pull when you want to see if any changes were added to the repository by
other users. If Git automatically does it for you, you wouldn't know if any changes were committed
while you were working on files on your own and you would have to run git log everytime before 
committing any changes.

Describe the differences between forks, clones, and branches. When would you use one instead of 
another?

Forking can be seen as making a copy of an existing repository and adding to it. The original
repository remains unchanged.
Cloning means making a copy of a repository and committing changes to the original repository.
Branching means creating a new branch on an existing repository.

Forking can be used when you want to add to an existing repository but don't want the original
repository to change.
Cloning is used when you want to copy a repository to your machine and committing to the original
repository.
Branching is used when you want to commit changes on a separate branch, perhaps to try an
experimental feature, but wan to avoid modifying the master branch.

What is the benefit of having a copy of the last known state of the remote stored locally?

Having a copy of the last known state of the remote stored locally helps you determine if your
GitHub repository is up-to-data with your local repository.

How would you collaborate without using Git or GitHub? What would be easier, and what would be 
harder?

Collaborating without GitHub would be a challenge when it comes to incorporating each others' 
changes into the project. Everyone would have to share their files, and perhaps, one person would
be in charge to add the desired changes to the actual project.

Git makes this a lot easier using it's collaboration features such as cloning and pull requests,
etc. However, when there are conflicts in files, users still need to discuss with each other to
resolve the issue and if the users not very experienced, they can possibly generate rather
complicated conflicts which might be really time hard and time consuming to solve.






